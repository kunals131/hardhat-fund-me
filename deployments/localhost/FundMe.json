{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0fca2b228426c2c725e8dd30f72915c7bad58fefd1296bb7de309543cbeeff2b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "890726",
    "logsBloom": "0x
    "blockHash": "0x529d8f93c1bd53867a7fc0a1a76f2664233bd6cd7437e004531cc72ab3dcbe61",
    "transactionHash": "0x0fca2b228426c2c725e8dd30f72915c7bad58fefd1296bb7de309543cbeeff2b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "890726",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "3aa0d0ca480aadc873f38ec9ac22f380",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get funds from users\\n//withdraw funds \\n//set a minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n\\ncontract FundMe {\\n    //library\\n    using PriceConverter for uint256;\\n\\n    uint public minimumUsd = 50*1e18;\\n\\n    address[] public funders;\\n    mapping(address=>uint256) public addressToAmountFunded;\\n\\n    address public owner;\\n    AggregatorV3Interface public priceFeed;\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress); \\n    }\\n\\n    function fund() public payable{\\n        //Want to be able to set a minimum fund  \\n        //1. How do we send ETH to this contract?\\n        require(msg.value.getConversionRate(priceFeed)>=minimumUsd, \\\"Didn't send enough!\\\"); /// = 1*10**18\\n        //How do we convert usd to eth , we cannot make any API request! \\n       //msg.value has 18 decimal places\\n       funders.push(msg.sender);\\n       addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n\\n    function withdraw() public onlyOwner{\\n        //Check if the caller is the owner as owner can only withdraw the money\\n        // require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        //for loop //[1,2,3,4] works same as other languages\\n        /*starting index, ending index, step amount*/\\n\\n\\n        for(uint256 funderIndex = 0; funderIndex>funders.length; funderIndex++) {\\n            //code\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        funders = new address[](0);\\n        //actually withdraw the funds\\n\\n\\n        /*There are three ways to tranfer or withdraw funds in\\n\\n        transfer\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        How it works : \\n        1. Reverts the transaction if gas fee increases 2300 and throws error\\n--------------------------------------------------------------------------------\\n\\n        send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n\\n        How it works : \\n        1. Doesnt error or revert, it returns a boolean true or false wether the transaction went through or not\\n        2. Also capped at 2300 gas\\n\\n---------------------------------------------------------------------\\n        call\\n        (bool callSuccess,)=payable(msg.sender).call{value : address(this.balance)}(\\\"\\\")\\n        require(callSuccess, \\\"call failed\\\");\\n\\n----------------------------------------------------------------------------------------\\\\\\nOut of above three call is the most reccomended way\\n        */ \\n\\n        (bool callSuccess,) = payable(msg.sender).call{value : address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n\\n\\n    }\\n\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"Sender is not owner!\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0xfabfb4f9fef77dcac6ea0a654797757839f6863f9c84335cea4d3ed7990b0b34\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConverter {\\r\\n        function getPrice (AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        //interation with contract outside we need ABI and address of contract;\\r\\n        //ABI : \\r\\n        //Address : 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n       \\r\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount)/1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc11c79ffb8eed453ae89ace6abb36fad7d14672dd0a3b17799c7c212ae31444f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f4a380380610f4a833981810160405281019061003f91906100dc565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014e565b6000815190506100d681610137565b92915050565b6000602082840312156100ee57600080fd5b60006100fc848285016100c7565b91505092915050565b600061011082610117565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61014081610105565b811461014b57600080fd5b50565b610ded8061015d6000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610a5b565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107e0565b61042f565b6040516100eb9190610a5b565b60405180910390f35b34801561010057600080fd5b50610109610447565b60405161011691906109e0565b60405180910390f35b34801561012b57600080fd5b5061013461046d565b60405161014191906109c5565b60405180910390f35b610152610493565b005b34801561016057600080fd5b5061017b60048036038101906101769190610809565b6105b5565b60405161018891906109c5565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a3b565b60405180910390fd5b60005b6001805490508111156102f957600060018281548110610273577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102f190610cb4565b91505061022a565b50600067ffffffffffffffff81111561033b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506001908051906020019061037f9291906106d0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a6906109b0565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610423906109fb565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000546104cb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f490919063ffffffff16565b101561050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390610a1b565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600181815481106105c557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060083610630565b90506000670de0b6b3a764000085836106199190610bda565b6106239190610a92565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561067957600080fd5b505afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190610832565b5050509150506402540be400816106c89190610ac3565b915050919050565b828054828255906000526020600020908101928215610749579160200282015b828111156107485782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106f0565b5b509050610756919061075a565b5090565b5b8082111561077357600081600090555060010161075b565b5090565b60008135905061078681610d5b565b92915050565b60008151905061079b81610d72565b92915050565b6000813590506107b081610d89565b92915050565b6000815190506107c581610d89565b92915050565b6000815190506107da81610da0565b92915050565b6000602082840312156107f257600080fd5b600061080084828501610777565b91505092915050565b60006020828403121561081b57600080fd5b6000610829848285016107a1565b91505092915050565b600080600080600060a0868803121561084a57600080fd5b6000610858888289016107cb565b95505060206108698882890161078c565b945050604061087a888289016107b6565b935050606061088b888289016107b6565b925050608061089c888289016107cb565b9150509295509295909350565b6108b281610c34565b82525050565b6108c181610c90565b82525050565b60006108d4600083610a76565b9150600082019050919050565b60006108ee600b83610a81565b91507f43616c6c204661696c65640000000000000000000000000000000000000000006000830152602082019050919050565b600061092e601383610a81565b91507f4469646e27742073656e6420656e6f75676821000000000000000000000000006000830152602082019050919050565b600061096e601483610a81565b91507f53656e646572206973206e6f74206f776e6572210000000000000000000000006000830152602082019050919050565b6109aa81610c70565b82525050565b60006109bb826108c7565b9150819050919050565b60006020820190506109da60008301846108a9565b92915050565b60006020820190506109f560008301846108b8565b92915050565b60006020820190508181036000830152610a14816108e1565b9050919050565b60006020820190508181036000830152610a3481610921565b9050919050565b60006020820190508181036000830152610a5481610961565b9050919050565b6000602082019050610a7060008301846109a1565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a9d82610c70565b9150610aa883610c70565b925082610ab857610ab7610d2c565b5b828204905092915050565b6000610ace82610c46565b9150610ad983610c46565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b1857610b17610cfd565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5557610b54610cfd565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b9257610b91610cfd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bcf57610bce610cfd565b5b828202905092915050565b6000610be582610c70565b9150610bf083610c70565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2957610c28610cfd565b5b828202905092915050565b6000610c3f82610c50565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c9b82610ca2565b9050919050565b6000610cad82610c50565b9050919050565b6000610cbf82610c70565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf257610cf1610cfd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610d6481610c34565b8114610d6f57600080fd5b50565b610d7b81610c46565b8114610d8657600080fd5b50565b610d9281610c70565b8114610d9d57600080fd5b50565b610da981610c7a565b8114610db457600080fd5b5056fea26469706673582212201fb64cec502856d191fd79d0fb88eb0a6faabb758303146f40700d9e64e4a44564736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610a5b565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107e0565b61042f565b6040516100eb9190610a5b565b60405180910390f35b34801561010057600080fd5b50610109610447565b60405161011691906109e0565b60405180910390f35b34801561012b57600080fd5b5061013461046d565b60405161014191906109c5565b60405180910390f35b610152610493565b005b34801561016057600080fd5b5061017b60048036038101906101769190610809565b6105b5565b60405161018891906109c5565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a3b565b60405180910390fd5b60005b6001805490508111156102f957600060018281548110610273577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102f190610cb4565b91505061022a565b50600067ffffffffffffffff81111561033b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506001908051906020019061037f9291906106d0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a6906109b0565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610423906109fb565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000546104cb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f490919063ffffffff16565b101561050c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050390610a1b565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600181815481106105c557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060083610630565b90506000670de0b6b3a764000085836106199190610bda565b6106239190610a92565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561067957600080fd5b505afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190610832565b5050509150506402540be400816106c89190610ac3565b915050919050565b828054828255906000526020600020908101928215610749579160200282015b828111156107485782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106f0565b5b509050610756919061075a565b5090565b5b8082111561077357600081600090555060010161075b565b5090565b60008135905061078681610d5b565b92915050565b60008151905061079b81610d72565b92915050565b6000813590506107b081610d89565b92915050565b6000815190506107c581610d89565b92915050565b6000815190506107da81610da0565b92915050565b6000602082840312156107f257600080fd5b600061080084828501610777565b91505092915050565b60006020828403121561081b57600080fd5b6000610829848285016107a1565b91505092915050565b600080600080600060a0868803121561084a57600080fd5b6000610858888289016107cb565b95505060206108698882890161078c565b945050604061087a888289016107b6565b935050606061088b888289016107b6565b925050608061089c888289016107cb565b9150509295509295909350565b6108b281610c34565b82525050565b6108c181610c90565b82525050565b60006108d4600083610a76565b9150600082019050919050565b60006108ee600b83610a81565b91507f43616c6c204661696c65640000000000000000000000000000000000000000006000830152602082019050919050565b600061092e601383610a81565b91507f4469646e27742073656e6420656e6f75676821000000000000000000000000006000830152602082019050919050565b600061096e601483610a81565b91507f53656e646572206973206e6f74206f776e6572210000000000000000000000006000830152602082019050919050565b6109aa81610c70565b82525050565b60006109bb826108c7565b9150819050919050565b60006020820190506109da60008301846108a9565b92915050565b60006020820190506109f560008301846108b8565b92915050565b60006020820190508181036000830152610a14816108e1565b9050919050565b60006020820190508181036000830152610a3481610921565b9050919050565b60006020820190508181036000830152610a5481610961565b9050919050565b6000602082019050610a7060008301846109a1565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a9d82610c70565b9150610aa883610c70565b925082610ab857610ab7610d2c565b5b828204905092915050565b6000610ace82610c46565b9150610ad983610c46565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b1857610b17610cfd565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5557610b54610cfd565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b9257610b91610cfd565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bcf57610bce610cfd565b5b828202905092915050565b6000610be582610c70565b9150610bf083610c70565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2957610c28610cfd565b5b828202905092915050565b6000610c3f82610c50565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c9b82610ca2565b9050919050565b6000610cad82610c50565b9050919050565b6000610cbf82610c70565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf257610cf1610cfd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610d6481610c34565b8114610d6f57600080fd5b50565b610d7b81610c46565b8114610d8657600080fd5b50565b610d9281610c70565b8114610d9d57600080fd5b50565b610da981610c7a565b8114610db457600080fd5b5056fea26469706673582212201fb64cec502856d191fd79d0fb88eb0a6faabb758303146f40700d9e64e4a44564736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}